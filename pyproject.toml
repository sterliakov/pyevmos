[build-system]
build-backend = "setuptools.build_meta"
requires = [
    'setuptools',
    # toml is in standard library in 3.11+
    'toml>=0.10.1;python_version<"3.11"',
]

[project]
authors = [{name = "sterliakov", email = "terlya.stas@gmail.com"}]
classifiers = [
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Build Tools",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Typing :: Typed",
]
dependencies = [
    "eth-abi >= 4.0,<6",
    "eth-account >= 0.13.0,<0.14",
    "eth-hash >= 0.7,<0.8",
    "eth-typing >= 5.0, <6",
    "eth-utils >= 5.0, <6",
    "bech32 ~= 1.2",
    "typing_extensions >= 4.3",
    "requests >= 2.28,<3",
    "alt-betterproto ~= 2.0.1",
]
description = "Python port of evmos.js - library to interact with Evmos blockchain"
dynamic = ["version"]
keywords = ["blockchain", "sdk", "ethereum"]
license = {file = "LICENSE.md"}
name = "evmos"
readme = "README.md"
requires-python = ">=3.8"

[project.optional-dependencies]
dev = [
    "alt-betterproto[compiler] ~= 2.0.1",
    "mypy >= 1.15.0",
    "pre-commit",
    "setuptools",
]
docs = [
    'docutils >=0.16, <0.18',  # Sphinx haven't upgraded yet
    "sphinx >=5.1.1, <6.0",
    "sphinx-rtd-theme",
]
test = [
    'pytest>=6.4.0',
    "pytest-cov",
    "python-dotenv",
]
types = [
    'types-protobuf',
    'types-requests',
]

[project.urls]
Documentation = "https://readthedocs.org/projects/pyevmos/badge/?version=latest"
Home = "https://github.com/sterliakov/pyevmos"
Issues = "https://github.com/sterliakov/pyevmos/issues"
Source = "https://github.com/sterliakov/pyevmos"

[tool.coverage.report]
exclude_lines = [
    # Explicitly ignored
    "pragma: no cover",
    # Often used in abstract classes
    "raise NotImplementedError",
    # Debug code
    'if self\.debug:',
    "def __repr__",
    # Scripts entrypoints
    "if __name__ == .__main__.:",
    # Should never run
    '@(abc\.)?abstractmethod',
    # Typing artifact, that has no implementation
    "@overload",
    # Typing artifact, False at runtime
    'if (typing\.)?TYPE_CHECKING:',
]

[tool.coverage.run]
omit = [
    "tests/*",
    "evmos/proto/autogen/*",
]

[tool.flake8]
# Docstring validation
docstring-convention = "google"
exclude = """
    .git,
    .github,
    __pycache__,
    .pytest_cache,
    .env,
    env,
    .pyenv,
    pyenv,
    *.egg_info,
"""
extend_ignore = [
    "SIM905",  # Allow statement "hello world".split() instead of list literal
    # "N806",  # Allow non-"lower_underscore" variables (it's too stupid rule)
    "PIE798",  # Allow class with only static methods for namespacing
    "D105",  # Magic methods may remain unannotated
    "D401",  # Imperative mood of first docstring line is not always encouraged
    "RST306",  # Plugin can't resolve links defined in other docstrings.
    "RST304",  # No builtin roles, so too much to do manually.
    "RST301",
    "RST201",  # Incompatible with google doc style
    "E203",  # Invalid. Expressions like `[len(x) :]` conform with PEP8, but raise this.
    "D100",  # Modules may remain unannotated
    "D104",  # Packages may remain unannotated
    "D107",  # __init__ may remain unannotated
]
max-complexity = 10
max_line_length = 88
# Ignore
per-file-ignores = [
    "tests/*:D,RST",  # We don't care about docstrings in tests.
]

[tool.isort]
add_imports = "from __future__ import annotations"
profile = "black"

[tool.mypy]
# This applies to all files (not very strict, used for scripts, etc.)
allow_redefinition = true
check_untyped_defs = true
ignore_missing_imports = true
incremental = true
no_implicit_optional = true
python_version = '3.8'
show_error_codes = true
show_traceback = true
strict_optional = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

# Enforce stricter validation for library code
[[tool.mypy.overrides]]
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
module = "evmos.*"
warn_no_return = true

# Do not check autogenerated stuff
[[tool.mypy.overrides]]
ignore_errors = true
module = "evmos.proto.autogen.py.*"

[tool.pytest.ini_options]
addopts = """
    --tb=short
    --cov=evmos
    --no-cov-on-fail
    --cov-report=term-missing
    --cov-branch
    --doctest-modules
    --doctest-continue-on-failure
    --ignore=docs
    --color=yes
"""
log_cli = true
log_cli_level = "INFO"
markers = [
    'can_timeout',  # takes forever to finish
    'online',  # write + return_transaction
    'offline',  # write (interacts with the chain)
    'read',  # read only (query)
]

[tool.setuptools.dynamic]
version = {attr = "evmos.__version__"}
